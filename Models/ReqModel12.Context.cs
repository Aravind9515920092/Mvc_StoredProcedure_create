//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mvc_StoredProcedure_create.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BusinessDatabaseEntities15 : DbContext
    {
        public BusinessDatabaseEntities15()
            : base("name=BusinessDatabaseEntities15")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BusinessInformation> BusinessInformation { get; set; }
    
        public virtual int sp_InsertBusiness(string business_Type, string business_Category, string business_SubCategory, string business_Name, string owner_Name, string h_No, string street, string area, string landmark, string pincode, string city, string state, string pAN, string gST_Number, string cIN, string billing_Address, string billing_Label, string email, string alternate_Email, string mobile_Number, string alternate_Mobile, string authorized_Signature, string description)
        {
            var business_TypeParameter = business_Type != null ?
                new ObjectParameter("Business_Type", business_Type) :
                new ObjectParameter("Business_Type", typeof(string));
    
            var business_CategoryParameter = business_Category != null ?
                new ObjectParameter("Business_Category", business_Category) :
                new ObjectParameter("Business_Category", typeof(string));
    
            var business_SubCategoryParameter = business_SubCategory != null ?
                new ObjectParameter("Business_SubCategory", business_SubCategory) :
                new ObjectParameter("Business_SubCategory", typeof(string));
    
            var business_NameParameter = business_Name != null ?
                new ObjectParameter("Business_Name", business_Name) :
                new ObjectParameter("Business_Name", typeof(string));
    
            var owner_NameParameter = owner_Name != null ?
                new ObjectParameter("Owner_Name", owner_Name) :
                new ObjectParameter("Owner_Name", typeof(string));
    
            var h_NoParameter = h_No != null ?
                new ObjectParameter("H_No", h_No) :
                new ObjectParameter("H_No", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var landmarkParameter = landmark != null ?
                new ObjectParameter("Landmark", landmark) :
                new ObjectParameter("Landmark", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var pANParameter = pAN != null ?
                new ObjectParameter("PAN", pAN) :
                new ObjectParameter("PAN", typeof(string));
    
            var gST_NumberParameter = gST_Number != null ?
                new ObjectParameter("GST_Number", gST_Number) :
                new ObjectParameter("GST_Number", typeof(string));
    
            var cINParameter = cIN != null ?
                new ObjectParameter("CIN", cIN) :
                new ObjectParameter("CIN", typeof(string));
    
            var billing_AddressParameter = billing_Address != null ?
                new ObjectParameter("Billing_Address", billing_Address) :
                new ObjectParameter("Billing_Address", typeof(string));
    
            var billing_LabelParameter = billing_Label != null ?
                new ObjectParameter("Billing_Label", billing_Label) :
                new ObjectParameter("Billing_Label", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var alternate_EmailParameter = alternate_Email != null ?
                new ObjectParameter("Alternate_Email", alternate_Email) :
                new ObjectParameter("Alternate_Email", typeof(string));
    
            var mobile_NumberParameter = mobile_Number != null ?
                new ObjectParameter("Mobile_Number", mobile_Number) :
                new ObjectParameter("Mobile_Number", typeof(string));
    
            var alternate_MobileParameter = alternate_Mobile != null ?
                new ObjectParameter("Alternate_Mobile", alternate_Mobile) :
                new ObjectParameter("Alternate_Mobile", typeof(string));
    
            var authorized_SignatureParameter = authorized_Signature != null ?
                new ObjectParameter("Authorized_Signature", authorized_Signature) :
                new ObjectParameter("Authorized_Signature", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertBusiness", business_TypeParameter, business_CategoryParameter, business_SubCategoryParameter, business_NameParameter, owner_NameParameter, h_NoParameter, streetParameter, areaParameter, landmarkParameter, pincodeParameter, cityParameter, stateParameter, pANParameter, gST_NumberParameter, cINParameter, billing_AddressParameter, billing_LabelParameter, emailParameter, alternate_EmailParameter, mobile_NumberParameter, alternate_MobileParameter, authorized_SignatureParameter, descriptionParameter);
        }
    }
}
